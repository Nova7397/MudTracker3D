# TIMELAPSE DATA COLLECTION FOR WASP 3D PRINTER
This script captures photos at regular intervals during a 3D print process and logs the associated G-code instructions. 
The script communicates with a 3D printer through OctoPrint, retrieves the current G-code being executed, captures images 
of the printing process, and saves the data to a CSV file.

## Features
    -Captures a photo every second during printing and saves it to a specified folder.
    -Logs each photo's file location, timestamp, and current G-code command to a CSV file.
    -Rotates images if necessary for correct orientation.
    -Checks the printer’s status periodically and starts the timelapse when printing begins.

## Requirements
Python Libraries: Make sure to install the following packages:
    -requests for API communication with OctoPrint.
    -picamera2 and libcamera for Raspberry Pi camera control.
    -Pillow for image rotation.
OctoPrint: The 3D printer should be set up with OctoPrint for remote monitoring and control.

## Setup
    -Clone the repository and navigate to the project folder.
    -Update the following variables in the script:
        API_KEY: Replace "Enter your printer" with your OctoPrint API key.
        OCTOPRINT_URL: Enter your printer's IP address.
        GCODE_URL: Provide the endpoint to retrieve the G-code file.
        folder_path: Specify the path for storing images and CSV files.
    -Ensure the Raspberry Pi Camera is properly installed and configured.

## Running the Script
## To start collecting data:
Run the script:
bash use code: 'python3 script_name.py'
The script will continuously check the printer status. Once the printer starts printing, it will begin capturing images and logging data.

## Folder Structure
A new folder is created with a unique timestamp for each printing session, containing:

    Photos of the print at each interval.
    A CSV file named timelapse_log.csv, storing each image's file location, timestamp, and G-code command.

## Functions
    -get_printer_status: Retrieves the printer’s current status (e.g., Printing, Paused).
    -get_current_gcode: Fetches the G-code command currently being executed.
    -capture_photo: Captures and saves a photo from the camera.
    -log_to_csv: Records photo location, timestamp, and G-code to a CSV file.
    -start_timelapse: Begins the timelapse when printing starts.
    -rotate_image_180: Rotates the captured image for correct orientation.

## Troubleshooting
    Error with OctoPrint connection: Ensure the API key and URL are correctly set.
    Camera not capturing: Verify the camera is properly installed and configured.

## Example Output
The script outputs photos and logs like this:

Photos: image_2024-10-10_13-51-53.jpg
CSV:
photo_location,timestamp,gcode
/home/user/camera_project/2024-10-10-13-51-48_output/image_2024-10-10_13-51-53.jpg,2024-10-10_13-51-53,G1 X32.00002 Y-40.005591 Z1.516854 E2 F1500 